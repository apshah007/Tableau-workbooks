<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='auto (vehicle)' inline='true' name='federated.1h70tbh09m7yql14mwli60g7cr7t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='vehicle' name='excel-direct.1eikx901twajwh17dgnqc1nyvdvi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/amyshah/Desktop/vehicle.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1eikx901twajwh17dgnqc1nyvdvi' name='auto' table='[auto$]' type='table'>
          <columns gridOrigin='A1:K345:no:A1:K345:0' header='yes' outcome='2'>
            <column datatype='string' name='month' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='domestic not seasonally adjusted' ordinal='2' />
            <column datatype='real' name='domestic combined seasonal trading day factor' ordinal='3' />
            <column datatype='real' name='domestic seasonally adjusted thousands' ordinal='4' />
            <column datatype='real' name='domestic seasonally adjusted at annual rates millions' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='foreign not seasonally adjusted' ordinal='7' />
            <column datatype='real' name='foreign combined seasonal trading day factor' ordinal='8' />
            <column datatype='real' name='foreign seasonally adjusted thousands' ordinal='9' />
            <column datatype='real' name='foreign seasonally adjusted at annual rates millions' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1eikx901twajwh17dgnqc1nyvdvi' name='auto' table='[auto$]' type='table'>
          <columns gridOrigin='A1:K345:no:A1:K345:0' header='yes' outcome='2'>
            <column datatype='string' name='month' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='domestic not seasonally adjusted' ordinal='2' />
            <column datatype='real' name='domestic combined seasonal trading day factor' ordinal='3' />
            <column datatype='real' name='domestic seasonally adjusted thousands' ordinal='4' />
            <column datatype='real' name='domestic seasonally adjusted at annual rates millions' ordinal='5' />
            <column datatype='real' name='F7' ordinal='6' />
            <column datatype='real' name='foreign not seasonally adjusted' ordinal='7' />
            <column datatype='real' name='foreign combined seasonal trading day factor' ordinal='8' />
            <column datatype='real' name='foreign seasonally adjusted thousands' ordinal='9' />
            <column datatype='real' name='foreign seasonally adjusted at annual rates millions' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[auto]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K345:no:A1:K345:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic not seasonally adjusted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[domestic not seasonally adjusted]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>domestic not seasonally adjusted</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic combined seasonal trading day factor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[domestic combined seasonal trading day factor]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>domestic combined seasonal trading day factor</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic seasonally adjusted thousands</remote-name>
            <remote-type>5</remote-type>
            <local-name>[domestic seasonally adjusted thousands]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>domestic seasonally adjusted thousands</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>domestic seasonally adjusted at annual rates millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[domestic seasonally adjusted at annual rates millions]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>domestic seasonally adjusted at annual rates millions</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>foreign not seasonally adjusted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[foreign not seasonally adjusted]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>foreign not seasonally adjusted</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>foreign combined seasonal trading day factor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[foreign combined seasonal trading day factor]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>foreign combined seasonal trading day factor</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>foreign seasonally adjusted thousands</remote-name>
            <remote-type>5</remote-type>
            <local-name>[foreign seasonally adjusted thousands]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>foreign seasonally adjusted thousands</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>foreign seasonally adjusted at annual rates millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[foreign seasonally adjusted at annual rates millions]</local-name>
            <parent-name>[auto]</parent-name>
            <remote-alias>foreign seasonally adjusted at annual rates millions</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[auto_AD191B865E2A4A0097ED3830D6F1F77C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='auto' datatype='table' name='[__tableau_internal_object_id__].[auto_AD191B865E2A4A0097ED3830D6F1F77C]' role='measure' type='quantitative' />
      <column caption='Domestic Combined Seasonal Trading Day Factor' datatype='real' name='[domestic combined seasonal trading day factor]' role='measure' type='quantitative' />
      <column caption='Domestic Not Seasonally Adjusted' datatype='real' name='[domestic not seasonally adjusted]' role='measure' type='quantitative' />
      <column caption='Domestic Seasonally Adjusted At Annual Rates Millions' datatype='real' name='[domestic seasonally adjusted at annual rates millions]' role='measure' type='quantitative' />
      <column caption='Domestic Seasonally Adjusted Thousands' datatype='real' name='[domestic seasonally adjusted thousands]' role='measure' type='quantitative' />
      <column caption='Foreign Combined Seasonal Trading Day Factor' datatype='real' name='[foreign combined seasonal trading day factor]' role='measure' type='quantitative' />
      <column caption='Foreign Not Seasonally Adjusted' datatype='real' name='[foreign not seasonally adjusted]' role='measure' type='quantitative' />
      <column caption='Foreign Seasonally Adjusted At Annual Rates Millions' datatype='real' name='[foreign seasonally adjusted at annual rates millions]' role='measure' type='quantitative' />
      <column caption='Foreign Seasonally Adjusted Thousands' datatype='real' name='[foreign seasonally adjusted thousands]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='auto' id='auto_AD191B865E2A4A0097ED3830D6F1F77C'>
            <properties context=''>
              <relation connection='excel-direct.1eikx901twajwh17dgnqc1nyvdvi' name='auto' table='[auto$]' type='table'>
                <columns gridOrigin='A1:K345:no:A1:K345:0' header='yes' outcome='2'>
                  <column datatype='string' name='month' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='domestic not seasonally adjusted' ordinal='2' />
                  <column datatype='real' name='domestic combined seasonal trading day factor' ordinal='3' />
                  <column datatype='real' name='domestic seasonally adjusted thousands' ordinal='4' />
                  <column datatype='real' name='domestic seasonally adjusted at annual rates millions' ordinal='5' />
                  <column datatype='real' name='F7' ordinal='6' />
                  <column datatype='real' name='foreign not seasonally adjusted' ordinal='7' />
                  <column datatype='real' name='foreign combined seasonal trading day factor' ordinal='8' />
                  <column datatype='real' name='foreign seasonally adjusted thousands' ordinal='9' />
                  <column datatype='real' name='foreign seasonally adjusted at annual rates millions' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Retail Sales Domestic vs. Foreign Autos from 1990 to 2016
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='auto (vehicle)' name='federated.1h70tbh09m7yql14mwli60g7cr7t' />
          </datasources>
          <datasource-dependencies datasource='federated.1h70tbh09m7yql14mwli60g7cr7t'>
            <column caption='Domestic Seasonally Adjusted At Annual Rates Millions' datatype='real' name='[domestic seasonally adjusted at annual rates millions]' role='measure' type='quantitative' />
            <column caption='Foreign Seasonally Adjusted Thousands' datatype='real' name='[foreign seasonally adjusted thousands]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[domestic seasonally adjusted at annual rates millions]' derivation='Sum' name='[sum:domestic seasonally adjusted at annual rates millions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[foreign seasonally adjusted thousands]' derivation='Sum' name='[sum:foreign seasonally adjusted thousands:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1h70tbh09m7yql14mwli60g7cr7t].[sum:foreign seasonally adjusted thousands:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h70tbh09m7yql14mwli60g7cr7t].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1h70tbh09m7yql14mwli60g7cr7t].[sum:domestic seasonally adjusted at annual rates millions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h70tbh09m7yql14mwli60g7cr7t].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1h70tbh09m7yql14mwli60g7cr7t].[sum:foreign seasonally adjusted thousands:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h70tbh09m7yql14mwli60g7cr7t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1h70tbh09m7yql14mwli60g7cr7t].[sum:domestic seasonally adjusted at annual rates millions:qk] + [federated.1h70tbh09m7yql14mwli60g7cr7t].[sum:foreign seasonally adjusted thousands:qk])</rows>
        <cols>[federated.1h70tbh09m7yql14mwli60g7cr7t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{099329A3-4CD8-45BF-8A77-6CAAC774A73F}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1h70tbh09m7yql14mwli60g7cr7t].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h70tbh09m7yql14mwli60g7cr7t].[:Measure Names]</field>
            <field>[federated.1h70tbh09m7yql14mwli60g7cr7t].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4D683A3-89DD-4BF4-B966-BC8E2FF2EC15}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
